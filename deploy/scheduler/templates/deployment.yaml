apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scheduler.fullname" . }}
  labels:
    {{- include "scheduler.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "scheduler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scheduler.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "scheduler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  key: scheduler_db_user
                  name: {{ .Release.Name }}-db-auth
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: scheduler_db_pass
                  name: {{ .Release.Name }}-db-auth
            - name: "POSTGRES_DB"
              valueFrom:
                secretKeyRef:
                  key: scheduler_db_db
                  name: {{ .Release.Name }}-db-auth
            - name: "POSTGRES_HOST"
              value: {{ .Values.scheduler_db_host }}
            - name: "KAFKA_HOST"
              value: {{ .Values.kafka_host }}
            - name: "KAFKA_PORT"
              value: {{ .Values.kafka_port }}
            - name: "SUBMISSIONS_TOPIC"
              value: {{ .Values.submission_kafka_topic }}
            - name: "STEPS_TOPIC"
              value: {{ .Values.steps_kafka_topic }}
            - name: "REDIS_HOST"
              value: {{ .Values.redis_host }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
